@{
	ViewData["Title"] = "View Expenses";
}
@model IEnumerable<FinanceApp.Models.Expense>

<h2 class="text-center">My Expenses</h2>

<div class="container">
	<table class="table table-bordered">
		@* Header *@
		<thead class="table-light">
			<tr>
				<th>Description</th>
				<th>Amount</th>
				<th>Category</th>
				<th>Date</th>
			</tr>
		</thead>
		@* Body *@
		<tbody>
			@foreach(var item in Model)
			{
				<tr>
					<td>@item.Description</td>
					<td>$@item.Amount</td>
					<td>@item.Category</td>
					<td>@item.Date.ToString("yyyy-MM-dd")</td>
				</tr>
			}
		</tbody>
	</table>
</div>

<h2 class="text-center">Expenses Overview</h2>

<div>
	<canvas style="width: 50%; display: block; margin-left: auto; margin-right: auto" id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
	const context = document.getElementById("myChart");
	
	fetch('/Expenses/GetChartData')
		.then(response => response.json())
		.then(data => {
			new Chart(context, {
				type: 'pie',
				data: {
					labels: data.map(d => d.category),
					datasets: [{
						data: data.map(d => d.total),
					}]
				}
			});
		});
</script>